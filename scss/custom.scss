// @import "compass/css3";

:root {
    --dark-brown: #2D231E;
    --light-brown: #806D5C;
    --dark-tan: #C4B3A8;
    --light-tan: #DDD0B5;
    
}

* {
    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}

body {
    margin: 0;
}

.content {
    display: flex;
    flex-direction: column;
}

.header, .footer {
    display: flex;
    background-color: var(--dark-brown);
    color: var(--light-tan);
    margin: 0;
    padding: 0;
}

.header {
    justify-content: space-between;
}

.nav-left, .nav-links {
    display: flex;
    align-items: center;
}

.nav-icon {
    margin: 0px 16px 0px 16px;
}

.nav-links ul {
    display: flex;
    margin: 0 16px 0 8px;
    gap: 16px;
    list-style: none;
}

.nav-links ul li a {
    display: flex;
    font-size: 1.2em;
    color: var(--light-tan);
    align-items: center;
    text-decoration: none;
}

.welcome {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    background-color: var(--light-brown);
    color: var(--light-tan);
}

.left .right {
    flex: 1;
}

.stats {
    width: 400px;
}

.rounded-image {
    border: 2px solid var(--dark-brown);
    border-radius: 10%;
    width: 400px;
    height: 400px;
    margin: 20px;
}

.rounded-image img {
    border-radius: 10%;
    height: 100%;
    width: 100%;
}

// SPACE BACKGROUND

$spaceHeight: 400px;  // Height of Space Section

.space {  // Container for entire space section
    height: $spaceHeight;
    background: linear-gradient(#162b43 0%, #000000 100%);
    overflow: hidden;
}

.stars{  // Container for star elements
    height: 100%;
    width: 100%;
    position: relative;
    z-index: 0;
}

// n is number of stars
@function multiple-box-shadow($n) {
    $value: '#{random(2000)}px #{random($spaceHeight)}px #FFF';
    @for $i from 2 through $n {
        $value: '#{$value} , #{random(2000)}px #{random($spaceHeight)}px #FFF';
    }
    @return unquote($value);
} 
  
// Star Density - Far away (small) stars should have larger number than nearby (large) stars
$shadows-small:  multiple-box-shadow(2000);
$shadows-medium: multiple-box-shadow(500);
$shadows-big:    multiple-box-shadow(150);

// Filter variables
$starBlur: 0.03em;
$starBlurSmall: 0.02em;
    
#starsSm {
    width: 1px;
    height: 1px;
    filter: blur($starBlurSmall);
    -webkit-filter: blur($starBlurSmall);
    background: transparent;
    box-shadow: $shadows-small;
    animation: animStar 150s linear infinite;
}
// Fills space right of stars until loop restarts - allows for infinite loops
#starsSm::after { 
    content: " ";
    position: absolute;
    left: 2000px;
    width: 1px;
    height: 1px;
    filter: blur($starBlurSmall);
    -webkit-filter: blur($starBlurSmall);
    background: transparent;
    box-shadow: $shadows-small;
}

#starsMd {
    width: 2px;
    height: 2px;
    filter: blur($starBlur);
    -webkit-filter: blur($starBlur);
    background: transparent;
    box-shadow: $shadows-medium;
    animation: animStar 100s linear infinite;
}
#starsMd::after {
    content: " ";
    position: absolute;
    left: 2000px;
    width: 2px;
    height: 2px;
    filter: blur($starBlur);
    -webkit-filter: blur($starBlur);
    background: transparent;
    box-shadow: $shadows-medium;
}
    
#starsLg {
    width: 3px;
    height: 3px;
    filter: blur($starBlur);
    -webkit-filter: blur($starBlur);
    background: transparent;
    box-shadow: $shadows-big;
    animation: animStar 50s linear infinite;
}
#starsLg::after {
    content: " ";
    position: absolute;
    left: 2000px;
    width: 3px;
    height: 3px;
    filter: blur($starBlur);
    -webkit-filter: blur($starBlur);
    background: transparent;
    box-shadow: $shadows-big;
}

// Animate scroll effect
@keyframes animStar {
    from {
        transform: translateX(0);
    }
        
    to {
        transform: translateX(-2000px);
    }		
}

// STARSHIP COMPONENTS

// Called with different astronarHeight depending on screen size
@mixin starship-size($astronarHeight) {

    // Starship container
    .starship {
        height: 100%;
        width: 100%;
        margin-top: -$spaceHeight;
        text-align: center;
        animation: animShip 10s linear infinite;
    }
    @keyframes animShip {
        from {
            transform: translateY(0);
        }
        25% {
            transform: translateY(5%);
        }
        50% {
            transform: translateY(0);
        }
        75% {
            transform: translateY(-5%);
        }
        to {
            transform: translateY(0);
        }
    }

    // Starship image
    .astronar {
        height: $astronarHeight;
        width: auto;
        position: relative;
        z-index: 3;
        margin-top: ($spaceHeight - $astronarHeight) / 2;
    }

    // Starship Thruster
    $fireColor: rgb(255,80,0);
    $fireColorT: rgba(255,80,0,0);
    $dur: 0.25s;
    $thrusterBlur: 0.02em;
    $thrusterContrast: 5;
    $fireRad: 3em;
    $parts: 50;
    $partSize: $astronarHeight/3; // Vertical size of thruster
    $width: $astronarHeight /3 *2; // Horizontal size of thruster
    .thruster {
        position: relative;
        width: $astronarHeight;
        margin: 0 auto;
    }
    .fire {
        position: relative;
        left: -$astronarHeight / 2;
        z-index: 2;
        font-size: 24px;
        filter: blur($thrusterBlur) contrast($thrusterContrast);
        -webkit-filter: blur($thrusterBlur) contrast($thrusterContrast);  // Stylistic look for fire
        width: $width;
        height: $partSize;
        margin-top: -($astronarHeight + $partSize) / 2;
    }
    .particle {
        animation: thrust $dur ease-in infinite;
        background-image: radial-gradient($fireColor 20%,$fireColorT 70%);
        border-radius: 50%;
        mix-blend-mode: screen;
        opacity: 0;
        position: absolute;
        bottom: 0;
        width: $partSize;
        height: $partSize;
        // spread particles out in time and x-position to get desired effect
        @for $p from 1 through $parts {
            &:nth-of-type(#{$p}) {
                animation-delay: $dur * random();
                left: calc((100% - #{$partSize}) * #{($p - 1)/$parts});
            }
        }
    }
    @keyframes thrust {
        from {
            opacity: 0;
            transform: translateX(0) scale(1);
        }
        50% {
            opacity: 1;
            transform: translateX(-50%) scale(.4);
        }
        to {
            opacity: 0;
            transform: translateX(-100%) scale(0);
        }
    }
}

// Astronar size variables for different screen sizes
$largeSize: 300px;
$mediumSize: 150px;
$smallSize: 75px;

@media screen and (max-width: 360px) {
    @include starship-size($smallSize);
}
@media screen and (min-width: 361px) and (max-width: 720px) {
    @include starship-size($mediumSize);
}
@media screen and (min-width: 721px) {
    @include starship-size($largeSize);
}


.quotes {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-end;
    background-color: var(--light-tan);
    color: black;
    padding: 40px 0 40px 0;
}

.quote, .author {
    margin: 0 200px 0 200px;
}

.quote {
    font: italic 36px black;
}

.call-to-action {
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: var(--dark-tan);
    color: black;
}

.call-to-action p {
    margin: 0 0 20px 0;
    padding: 0;
}

.video-player {
    max-width: 600px;
    height: auto;
}

#video {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
    border: 2px solid var(--dark-brown);
    border-radius: 10%;
}

#play-button {
    margin: 20px;
    padding: 10px;
    color: var(--light-tan);
    background-color: var(--dark-brown);
    border-radius: 10%;
}

.footer {
    justify-content: center;
    align-items: center;
}
